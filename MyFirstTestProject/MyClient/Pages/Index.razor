@page "/"
@inject IClientProduct ClientProduct

@if (products is not null)
{
    @foreach (var item in products)
    {
        <div class="row">
            <div class="col-md-6">
                <h2>@item.Alias @item.Name @item.Type </h2>
            </div>
            <div class="col-md-6">
                <button class="btn btn-primary" @onclick="@(e => AddPrudoct(item))">Add Product</button>
                <button class="btn btn-warning">Update Product</button>
                <button class="btn btn-danger">Delete Product</button>
            </div>
        </div>
    }
}

@code {
    private List<Product> products;

    protected override async Task OnInitializedAsync()
    {
        products = await ClientProduct.GetProducts();
    }

    private async Task AddPrudoct(Product product)
    {
        await ClientProduct.CreateProduct(
                new AddProduct
                {
                    Alias = product.Alias,
                    Name = product.Name,
                    Type = product.Type
                }
            );
        products = await ClientProduct.GetProducts();
    }

    private async Task UpdatePrudoct(Product product)
    {
        await ClientProduct.UpdateProduct(
                new UpdateProduct
                {
                    Id = product.Id,
                    Alias = product.Alias,
                    Name = product.Name,
                    Type = product.Type
                }
            );
        products = await ClientProduct.GetProducts();
    }

    private async Task DeletePrudoct(Product product)
    {
        await ClientProduct.DeleteProducts(
                new DeleteProduct
                {
                    Id = product.Id,
                }
            );

        products = await ClientProduct.GetProducts();
    }
}